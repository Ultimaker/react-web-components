import { IGettextExtractorStats } from './extractor';
export interface IMessage {
    text: string;
    textPlural?: string;
    context?: string;
    references?: string[];
    comments?: string[];
}
export interface IContext {
    name: string;
    messages: IMessage[];
}
export declare type IMessageMap = {
    [text: string]: IMessage;
};
export declare type IContextMap = {
    [context: string]: IMessageMap;
};
export declare class CatalogBuilder {
    private stats;
    private contexts;
    private static compareStrings(a, b);
    private static concatUnique(array, items);
    private static extendMessage(message, data);
    private static normalizeMessage(message);
    constructor(stats?: IGettextExtractorStats);
    addMessage(message: IMessage): void;
    getMessages(): IMessage[];
    getContexts(): IContext[];
    getMessagesByContext(context: string): IMessage[];
    private getOrCreateContext(context);
}
